openapi: 3.0.3
info:
  title: Vibe Beace API
  version: 0.1.0
  description: |
    Internal API for inventory management. Responses are unified as:
    - Success: { success: true, data: ... }
    - Failure: { success: false, error: string | object }
servers:
  - url: /
tags:
  - name: Threads
  - name: Beads
  - name: CutCloths
  - name: XStitchCloths
components:
  securitySchemes:
    CsrfToken:
      type: apiKey
      in: header
      name: X-CSRF-Token
  schemas:
    ApiFailure:
      type: object
      properties:
        success:
          type: boolean
          enum: [false]
        error:
          oneOf:
            - type: string
            - type: object
      required: [success, error]
    Thread:
      type: object
      properties:
        id: { type: integer, example: 1 }
        brand: { type: string, example: DMC }
        colorNumber: { type: string, example: '310' }
        colorName: { type: string, nullable: true, example: Black }
        quantity: { type: integer, minimum: 0 }
        status: { type: string, enum: [unused, used, low], nullable: true }
        wishlist: { type: boolean }
        notes: { type: string, nullable: true }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
      required: [brand, colorNumber, quantity, wishlist]
    Bead:
      type: object
      properties:
        id: { type: integer }
        brand: { type: string }
        itemCode: { type: string }
        size: { type: string }
        colorName: { type: string, nullable: true }
        quantity: { type: integer, minimum: 0 }
        status: { type: string, enum: [unused, used, low], nullable: true }
        wishlist: { type: boolean }
        notes: { type: string, nullable: true }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
      required: [brand, itemCode, size, quantity, wishlist]
    CutCloth:
      type: object
      properties:
        id: { type: integer }
        brand: { type: string, nullable: true }
        fabricType: { type: string }
        pattern: { type: string }
        size: { type: string }
        quantity: { type: integer, minimum: 0 }
        status: { type: string, enum: [unused, used], nullable: true }
        wishlist: { type: boolean }
        notes: { type: string, nullable: true }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
      required: [fabricType, pattern, size, quantity, wishlist]
    XStitchCloth:
      type: object
      properties:
        id: { type: integer }
        brand: { type: string, nullable: true }
        count: { type: string }
        color: { type: string }
        size: { type: string }
        quantity: { type: integer, minimum: 0 }
        status: { type: string, enum: [unused, used], nullable: true }
        wishlist: { type: boolean }
        notes: { type: string, nullable: true }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
      required: [count, color, size, quantity, wishlist]
paths:
  /api/threads:
    get:
      tags: [Threads]
      parameters:
        - in: query
          name: query
          schema: { type: string }
      responses:
        '200':
          description: List of threads
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/Thread' }
                required: [success, data]
              examples:
                ok:
                  value:
                    success: true
                    data:
                      - {
                          id: 1,
                          brand: DMC,
                          colorNumber: '310',
                          colorName: Black,
                          quantity: 2,
                          status: unused,
                          wishlist: false
                        }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiFailure' }
    post:
      tags: [Threads]
      security: [{ CsrfToken: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Thread'
              required: [brand, colorNumber, quantity, wishlist]
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data: { $ref: '#/components/schemas/Thread' }
                required: [success, data]
              examples:
                created:
                  value:
                    success: true
                    data:
                      {
                        id: 10,
                        brand: DMC,
                        colorNumber: '321',
                        colorName: Red,
                        quantity: 1,
                        status: unused,
                        wishlist: false
                      }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
  /api/threads/{id}:
    put:
      tags: [Threads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Thread' }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/Thread' }
                          },
                        required: [success, data]
                      },
                    examples:
                      {
                        ok:
                          {
                            value:
                              {
                                success: true,
                                data:
                                  {
                                    id: 5,
                                    brand: DMC,
                                    colorNumber: '321',
                                    quantity: 3,
                                    wishlist: true
                                  }
                              }
                          }
                      }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
    delete:
      tags: [Threads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data: { type: object, properties: { id: { type: integer } }, required: [id] }
                required: [success, data]
              examples:
                deleted:
                  value: { success: true, data: { id: 5 } }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
  /api/threads/{id}/wishlist:
    patch:
      tags: [Threads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wishlist: { type: boolean }
              required: [wishlist]
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/Thread' }
                          },
                        required: [success, data]
                      },
                    examples: { ok: { value: { success: true, data: { id: 5, wishlist: true } } } }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/beads:
    get:
      tags: [Beads]
      parameters:
        - in: query
          name: query
          schema: { type: string }
      responses:
        '200':
          description: List of beads
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/Bead' }
                required: [success, data]
              examples:
                ok:
                  value:
                    success: true
                    data:
                      - {
                          id: 10,
                          brand: TOHO,
                          itemCode: A-01,
                          size: 11/0,
                          colorName: Red,
                          quantity: 1,
                          status: unused,
                          wishlist: false
                        }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiFailure' }
    post:
      tags: [Beads]
      security: [{ CsrfToken: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Bead' }
      responses:
        '201':
          {
            description: Created,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/Bead' }
                          },
                        required: [success, data]
                      },
                    examples:
                      {
                        created:
                          {
                            value:
                              {
                                success: true,
                                data:
                                  {
                                    id: 20,
                                    brand: TOHO,
                                    itemCode: A-01,
                                    size: 11/0,
                                    quantity: 1,
                                    wishlist: false
                                  }
                              }
                          }
                      }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
  /api/beads/{id}:
    put:
      tags: [Beads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Bead' }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/Bead' }
                          },
                        required: [success, data]
                      }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
    delete:
      tags: [Beads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          {
            description: Deleted,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data:
                              {
                                type: object,
                                properties: { id: { type: integer } },
                                required: [id]
                              }
                          },
                        required: [success, data]
                      },
                    examples: { deleted: { value: { success: true, data: { id: 9 } } } }
                  }
              }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
  /api/beads/{id}/wishlist:
    patch:
      tags: [Beads]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              { type: object, properties: { wishlist: { type: boolean } }, required: [wishlist] }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/Bead' }
                          },
                        required: [success, data]
                      },
                    examples: { ok: { value: { success: true, data: { id: 9, wishlist: true } } } }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/cut-cloths:
    get:
      tags: [CutCloths]
      parameters:
        - in: query
          name: query
          schema: { type: string }
      responses:
        '200':
          description: List of cut cloths
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/CutCloth' }
                required: [success, data]
              examples:
                ok:
                  value:
                    success: true
                    data:
                      - {
                          id: 30,
                          fabricType: Linen,
                          pattern: Plain,
                          size: 30x30,
                          quantity: 1,
                          status: unused,
                          wishlist: false
                        }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiFailure' }
    post:
      tags: [CutCloths]
      security: [{ CsrfToken: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/CutCloth' }
      responses:
        '201':
          {
            description: Created,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/CutCloth' }
                          },
                        required: [success, data]
                      },
                    examples:
                      {
                        created:
                          {
                            value:
                              {
                                success: true,
                                data:
                                  {
                                    id: 40,
                                    fabricType: Linen,
                                    pattern: Plain,
                                    size: 30x30,
                                    quantity: 1,
                                    wishlist: false
                                  }
                              }
                          }
                      }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/cut-cloths/{id}/wishlist:
    patch:
      tags: [CutCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              { type: object, properties: { wishlist: { type: boolean } }, required: [wishlist] }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/CutCloth' }
                          },
                        required: [success, data]
                      },
                    examples: { ok: { value: { success: true, data: { id: 7, quantity: 2 } } } }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/cut-cloths/{id}:
    put:
      tags: [CutCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/CutCloth' }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/CutCloth' }
                          },
                        required: [success, data]
                      }
                  }
              }
          }
    delete:
      tags: [CutCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          {
            description: Deleted,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data:
                              {
                                type: object,
                                properties: { id: { type: integer } },
                                required: [id]
                              }
                          },
                        required: [success, data]
                      },
                    examples: { deleted: { value: { success: true, data: { id: 7 } } } }
                  }
              }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/xstitch-cloths:
    get:
      tags: [XStitchCloths]
      parameters:
        - in: query
          name: query
          schema: { type: string }
      responses:
        '200':
          description: List of xstitch cloths
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, enum: [true] }
                  data:
                    type: array
                    items: { $ref: '#/components/schemas/XStitchCloth' }
                required: [success, data]
              examples:
                ok:
                  value:
                    success: true
                    data:
                      - {
                          id: 50,
                          count: '14',
                          color: White,
                          size: 30x30,
                          quantity: 1,
                          status: unused,
                          wishlist: false
                        }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ApiFailure' }
    post:
      tags: [XStitchCloths]
      security: [{ CsrfToken: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/XStitchCloth' }
      responses:
        '201':
          {
            description: Created,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/XStitchCloth' }
                          },
                        required: [success, data]
                      },
                    examples:
                      {
                        created:
                          {
                            value:
                              {
                                success: true,
                                data:
                                  {
                                    id: 60,
                                    count: '14',
                                    color: White,
                                    size: 30x30,
                                    quantity: 1,
                                    wishlist: false
                                  }
                              }
                          }
                      }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/xstitch-cloths/{id}/wishlist:
    patch:
      tags: [XStitchCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              { type: object, properties: { wishlist: { type: boolean } }, required: [wishlist] }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/XStitchCloth' }
                          },
                        required: [success, data]
                      },
                    examples: { ok: { value: { success: true, data: { id: 3, quantity: 2 } } } }
                  }
              }
          }
        '400':
          {
            description: Invalid input,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }

  /api/xstitch-cloths/{id}:
    put:
      tags: [XStitchCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/XStitchCloth' }
      responses:
        '200':
          {
            description: Updated,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data: { $ref: '#/components/schemas/XStitchCloth' }
                          },
                        required: [success, data]
                      }
                  }
              }
          }
    delete:
      tags: [XStitchCloths]
      security: [{ CsrfToken: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          {
            description: Deleted,
            content:
              {
                application/json:
                  {
                    schema:
                      {
                        type: object,
                        properties:
                          {
                            success: { type: boolean, enum: [true] },
                            data:
                              {
                                type: object,
                                properties: { id: { type: integer } },
                                required: [id]
                              }
                          },
                        required: [success, data]
                      },
                    examples: { deleted: { value: { success: true, data: { id: 3 } } } }
                  }
              }
          }
        '403':
          {
            description: CSRF required,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
        '500':
          {
            description: Server error,
            content: { application/json: { schema: { $ref: '#/components/schemas/ApiFailure' } } }
          }
